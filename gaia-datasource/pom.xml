<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>gaia</artifactId>
        <groupId>org.bravo</groupId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>gaia-datasource</artifactId>

    <properties>
        <sharding-jdbc-version>2.0.3</sharding-jdbc-version>
        <druid-version>1.1.9</druid-version>
    </properties>

    <description>
        数据源集成组件，包装了druid和sharding-jdbc以及测试数据库的集成;
        1: 当datasource.test=true时,将使用h2数据库，在当前工作目录data下生成platform的h2数据库文件
           默认的h2数据库用户和密码为platform:123，可以通过default.datasource.user和default.datasource.password
           进行修改
        2: druid使用spring-boot-starter完成与spring-boot的集成,包含加密解密,详情请参考druid的文档
           https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98
        3: sharding-jdbc的配置通过业务系统使用java config来完成;
           今后有了ddc之后，通过集中化配置（提供UI）并推送到应用完成配置;
           ddc和系统之间有约定，必须包含app.name、db.mode、sharding.jdbc.db.verison三者共同决定，例如：
           app.name=order
           db.mode=dev
           sharding.jdbc.db.version=001
           系统通过这三个属性定位到ddc获取db配置信息完成加载
    </description>

    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bravo</groupId>
            <artifactId>gaia-utils</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <!-- druid-spring-boot-starter -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid-version}</version>
        </dependency>

        <!-- sharding-jdbc-spring-boot-starter -->
        <dependency>
            <groupId>io.shardingjdbc</groupId>
            <artifactId>sharding-jdbc-core</artifactId>
            <version>${sharding-jdbc-version}</version>
        </dependency>
    </dependencies>
</project>